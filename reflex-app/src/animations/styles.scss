@import '../constants';
@import 'animations';

.rx-notification {
  position: relative;
  width: 36px;
  height: 36px;

  &__img {
    transform-origin: 50% 0;

    &--animate {
      animation: notifyShake ease-out .68s;
    }
  }

  &__badge {
    position: absolute;
    opacity: 0;
    top: -1.25px;
    right: -2px;
    width: 14px;
    height: 14px;
    border-radius: 12px;
    border: 3px solid $white;
    background-color: $red;

    &--animate {
      animation: badgePopIn ease-in-out .1s forwards, badgeDisappear ease-in-out .1s 1s forwards;
    }
  }
}

.rx-button {
  background: linear-gradient(to right, $purple-50, $purple);
  color: $white;
  width: 110px;
  height: 40px;
  border-radius: 4px;
  transition: border-radius .2s, transform .2s;


  &:hover {
    cursor: pointer;
    transform: scale(.95);
    border-radius: 3px;
  }

  &:active {
    opacity: 0.75;
    transform: translateY(2px) scale(.95);
  }

  &:focus {
    outline:0;
  }
}

.rx-input {
  border-radius: 2px;
  border: 1px solid rgb(85, 85, 85);
  color: rgb(85, 85, 85);
  line-height: 40px;
  height: 36px;
  padding: 0 12px;

  &--error {
    color: $red;
    border: 1px solid $red;
    animation: inputErrorShake .5s ease-in-out forwards;
  }

  &--success {
    color: $green;
    border: 1px solid $green;
    animation: inputSuccessPopUp .16s ease-out forwards;
  }

  &:focus {
    outline: none;
  }
}

.rx-input-label {
  margin-bottom: 4px;
}

.rx-input-success {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-end;

  &__input {
    padding-right: 36px;
  }

  &__img-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    height: 24px;
    width: 24px;
  }

  &__img {
    opacity: 0;
    position: absolute;
    height: 24px;
    width: 24px;

    &--animate {
      opacity: 1;
      // note(unzi): these two animations should be in sync but it seems like they're not
      animation: inputSuccessPopUp .16s ease-out, inputSuccessPopIn .12s ease-in-out;
    }
  }
}

.rx-progress-bar {
  height: 5px;
  background-color: #eeeeee;
  width: 200px;

  &__progress-bar {
    width: 0%;
    height: 5px;
    background-color: $purple-75;
    &--animate {
      animation: loadProgressBar 6s ease-in-out forwards, opacityPulse 2.6s ease-in-out infinite;
    }
  }
}

.rx-loading-search-input {
  width: 400px;
  overflow: hidden;
  position: relative;

  &--input {
    width: 100%;
    height: 24px;
    padding: 0 6px;
    border: none;
    outline: none;
  }

  &--line {
    background-color: #ccc;
    border: none;
    height: 1px;
    width: 100%;
    bottom: 0;
  }

  &--loading-line {
    position: absolute;
    bottom: 0;
    left: -200px;
    background-color: #565656;
    height: 1px;
    width: 50%;
    animation: loadSearchLine 1.5s ease-in-out infinite;
  }
}

input[type="checkbox"].rx-checkbox {
  display: none;

  & + label .rx-checkbox-svg {
    height: 16px;
    width: 16px;
    fill: white;
    border: 1px solid #ccc;
    border-radius: 3px;
    animation: checkboxClick .13s;
  }

  &:checked + label .rx-checkbox-svg {
    background-color: #7567F7;
    border: 1px solid #7567F7;
    stroke: #fff;
    animation: checkboxClickDuplicate .13s;

    & polyline {
      fill: none;
      stroke: #fff;
      stroke-width: 2;
      stroke-miterlimit: 10;
      stroke-dashoffset: 18.968;
      stroke-dasharray: 18.968;
      animation: checkStroke 0.3s cubic-bezier(0.39, 0.575, 0.565, 1) normal forwards;
    }
  }
}
